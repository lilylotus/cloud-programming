plugins {
    id 'org.springframework.boot' version '2.3.9.RELEASE'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'idea'
}

group 'cn.nihility'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    maven { url = 'http://maven.aliyun.com/nexus/content/groups/public' }
    mavenCentral()
}

dependencies {

}

test {
    useJUnitPlatform()
}

allprojects {

    apply plugin: 'java'
    apply plugin: 'idea'

    group 'cn.nihility'
    version '1.0-SNAPSHOT'
    sourceCompatibility = 1.8

    ext {
        set('springCloudVersion', "Hoxton.SR10")
        set('springSecurityVersion', "5.3.8.RELEASE")
    }

    repositories {
        maven { url = 'http://maven.aliyun.com/nexus/content/groups/public' }
        mavenCentral()
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'

    test {
        useJUnitPlatform()
    }
}

subprojects {

    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "org.springframework.security:spring-security-bom:${springSecurityVersion}"
        }
    }

}

task cleanAll(type: Delete, dependsOn: [clean]) {
    subprojects.forEach({
        /*println "[$it.name] : [$it.projectDir] : [$it.buildDir]"*/
        println "clean [$it.projectDir\\\\out]"
        delete "$it.projectDir\\out"
    })
}
